import express from "express";
// import {AdminAuthMiddleware} from '../../../middlewares/api/auth';

const routes = express.Router();
import {Admin{{module_name}}Controller} from "../../../controllers/admin/admin{{module_name}}Controller";
import {
    add{{module_name}}Validator,
    update{{module_name}}Validator,
    getAll{{module_name}}Validator
} from "../../../utils/validator/{{module_name}}Validator";

import {validateRequestBody, validateRequestParams} from "../../../utils/validator/ValidateRequest";

// routes.use(AdminAuthMiddleware);

routes.get('/', validateRequestParams(getAll{{module_name}}Validator), (req: any, res: any) => {
    const admin{{module_name}}Controller = new Admin{{module_name}}Controller();
    admin{{module_name}}Controller.getAll(req, res)
});
routes.get('/:id', (req: any, res: any) => {
    const admin{{module_name}}Controller = new Admin{{module_name}}Controller();
    admin{{module_name}}Controller.getById(req, res)
});
routes.post('/', validateRequestParams(add{{module_name}}Validator), (req: any, res: any) => {
    const admin{{module_name}}Controller = new Admin{{module_name}}Controller();
    admin{{module_name}}Controller.create(req, res)
});
routes.put('/:id', validateRequestParams(update{{module_name}}Validator), (req: any, res: any) => {
    const admin{{module_name}}Controller = new Admin{{module_name}}Controller();
    admin{{module_name}}Controller.update(req, res)
});
routes.delete('/:id', (req: any, res: any) => {
    const admin{{module_name}}Controller = new Admin{{module_name}}Controller();
    admin{{module_name}}Controller.delete(req, res)
});


export const router = routes;