import {body, param} from "express-validator";
import {{{module_name}}Model} from "../../models/{{module_name_lower}}Model";

const model = new {{module_name}}Model();
const isNameUnique = async (filter: any, req: any) => {
    const existingRecord = await model.GetOne(filter);
    if (existingRecord) {
        throw new Error('Record already exists');
    }
    return true;
};

const isExistsRecord = async (filter: {}, req: any) => {
    const existingRecord = await model.GetOne(filter);
    if (!existingRecord) {
        throw new Error('Record not exists');
    }
    return true;
};

export const add{{module_name}}Validator = [
    body("name").isString().notEmpty().withMessage("Name is required").custom((val, {req}) => isNameUnique({name: val}, req))
        .withMessage("Name is already exists"),
    body("status").isBoolean().notEmpty().withMessage("Status is required")
];

export const update{{module_name}}Validator = [
    body("name").isString().notEmpty().withMessage("Name is required").custom((val, {req}) => isNameUnique({
        name: val,
        id: {$ne: req?.params?.id}
    }, req))
        .withMessage("Name is already exists"),
    body("status").isBoolean().notEmpty().withMessage("Status is required")
];

